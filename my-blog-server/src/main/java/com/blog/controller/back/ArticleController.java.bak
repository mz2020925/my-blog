package com.blog.controller.back;

import com.blog.constant.MessageConstant;
import com.blog.dto.BackArticleAddDTO;
import com.blog.dto.BackArticleListDTO;
import com.blog.dto.BackArticleTitleExistDTO;
import com.blog.entity.BlogArticle;
import com.blog.result.PageResult;
import com.blog.result.Result;
import com.blog.service.BlogArticleService;
import com.blog.vo.BackModifyArticleVO;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import org.springframework.web.bind.annotation.*;

import javax.annotation.Resource;

/**
 * ()表控制层
 */
@RestController("backArticleController")
@RequestMapping("/article")
@Slf4j
@Api(tags = "文章管理")
public class ArticleController2 {
    /**
     * 服务对象
     */
    @Resource
    private BlogArticleService blogArticleService;

    /**
     * 条件分页获取文章
     */
    @PostMapping("/getByPage")
    @ApiOperation("条件分页获取文章")
    public Result getArticleList(@RequestBody BackArticleListDTO backArticleListDTO) {
        log.info("管理端-条件分页获取文章");
        PageResult pageResult = blogArticleService.getBackendArticleList(backArticleListDTO);
        return Result.success(pageResult);
    }

    @PutMapping("/updateTop/{id}/{isTop}")
    @ApiOperation("修改文章置顶")
    public Result updateArticleTop(@PathVariable("id") Integer id, @PathVariable("isTop") Integer isTop) {
        log.info("管理端-修改文章置顶：id={}，idTop={}", id, isTop);
        blogArticleService.update(BlogArticle
                .builder()
                .id(id)
                .isTop(isTop)
                .build());
        return Result.success();
    }

    /**
     * 根据文章id获取文章详细信息
     */
    @GetMapping("/getArticleById/{id}")
    @ApiOperation("根据文章id获取文章详细信息")
    public Result getArticleById(@PathVariable("id") Integer id) {
        log.info("管理端-根据文章id获取文章详细信息：{}", id);
        BackModifyArticleVO backModifyArticleVO = blogArticleService.getArticleById(id);
        return Result.success(backModifyArticleVO);
    }

    /**
     * 根据文章标题 和 id 判断文章标题是否重复了
     *
     * @param backArticleTitleExistDTO
     * @return
     */
    @PostMapping("/titleExist")
    @ApiOperation("判断文章标题是否重复")
    public Result<Boolean> titleExist(@RequestBody BackArticleTitleExistDTO backArticleTitleExistDTO) {
        log.info("根据文章标题和id判断文章标题是否重复了");
        Boolean res = blogArticleService.titleExist(backArticleTitleExistDTO);
        return Result.success(res);
    }

    /**
     * 修改文章
     *
     * @param backArticleAddDTO
     * @return
     */
    @PutMapping("/update")
    @ApiOperation("修改文章")
    public Result editArticle(@RequestBody BackArticleEditDTO backArticleAddDTO) {
        log.info("修改文章");
        blogArticleService.editArticle(backArticleAddDTO);
        return Result.message(MessageConstant.EDIT_ARTICLE_SUCCESS);
    }

    /**
     * 新增文章
     *
     * @param backArticleAddDTO
     * @return
     */
    @PostMapping("/add")
    @ApiOperation("新增文章")
    public Result addArticle(@RequestBody BackArticleEditDTO backArticleAddDTO) {
        log.info("新增文章");
        blogArticleService.addArticle(backArticleAddDTO);
        return Result.message(MessageConstant.ADD_ARTICLE_SUCCESS);
    }

    /**
     * 删除文章 传文章状态 1、2会假删除 3会真删除
     */
    @DeleteMapping("/delete/{id}/{status}")
    @ApiOperation("删除文章")
    public Result deleteArticle(@PathVariable("id") Integer id, @PathVariable("status") Integer status) {
        log.info("删除文章");
        blogArticleService.deleteArticle(id, status);
        return Result.success();
    }

    /**
     * 恢复文章
     */
    @PutMapping("/revert/{id}")
    @ApiOperation("恢复文章")
    public Result revertArticle(@PathVariable("id") Integer id) {
        log.info("恢复文章");
        blogArticleService.revertArticle(id);
        return Result.success();
    }

    /**
     * 公开或隐藏文章 1 公开 2 私密
     */
    @PutMapping("/isPublic/{id}/{status}")
    @ApiOperation("公开或隐藏文章")
    public Result isArticlePublic(@PathVariable("id") Integer id, @PathVariable("status") Integer status) {
        log.info("公开或隐藏文章");
        blogArticleService.isArticlePublic(id);
        return Result.success();
    }
}

